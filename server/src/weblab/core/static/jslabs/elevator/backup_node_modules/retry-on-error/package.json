{
  "name": "retry-on-error",
  "description": "Retry async operations with custom backoff strategies",
  "version": "0.0.2",
  "author": {
    "name": "James J. Jordan Jr.",
    "email": "jjrdn@styosis.com"
  },
  "keywords": [
    "retry",
    "backoff"
  ],
  "dependencies": {},
  "devDependencies": {
    "nodeunit": "~0.7.4"
  },
  "main": "./lib/retry.js",
  "scripts": {
    "test": "nodeunit ./test/*-tests.js"
  },
  "bugs": "https://github.com/jjrdn/retry/issues",
  "repository": {
    "type": "git",
    "url": "git@github.com:jjrdn/retry.git"
  },
  "homepage": "https://github.com/jjrdn/retry",
  "licenses": [
    {
      "type": "BSD",
      "url": "https://github.com/jjrdn/retry/raw/master/LICENSE"
    }
  ],
  "engines": {
    "node": ">=0.6",
    "npm": "1"
  },
  "readme": "retry on error\n==============\n\n[work in progress] Wrap an async function with retry logic.\n\ninstall\n-------\n\n```bash\n$ npm install retry-on-error\n```\n\nusage\n-----\n\n```javascript\n\nvar retry = require('retry-on-error');\n```\n\nretry(options)\n\n- *timeout* -- a number representing the time in ms to wait between retrys or\n  a function that accepts the attempt number as its only parameter and\n  returns the time in ms to wait after that attempt number. Numbers are\n  use for static timeouts, and functions can be used for custom backoff\n  strategies.  This module also includes functions to create common\n  backoff strategies. See backoff strategy section below.\n- *accept* -- predicate function that takes the same arguments\n  as the callback, and returns truthy if the execution should be\n  accepted as success and falsey if the execution should be\n  considered a failure/error. The default accept function follows the node\n  callback pattern where the first parameter to the callback represents \n  an error.\n- *minTimeout* and *maxTimtout* -- used to coerce the result of the timeout\n  function.\n- *maxAttempts* -- the maximum number number of attempts before\n  giving up and returning the last error.\n\nBackoff Strategy\n================\n\nwip\n",
  "_id": "retry-on-error@0.0.2",
  "dist": {
    "shasum": "64322b28e9b383fe8c4f8dec172ae9c3aefe73a1",
    "tarball": "http://registry.npmjs.org/retry-on-error/-/retry-on-error-0.0.2.tgz"
  },
  "_npmVersion": "1.1.62",
  "_npmUser": {
    "name": "jjrdn",
    "email": "jjrdn@styosis.com"
  },
  "maintainers": [
    {
      "name": "jjrdn",
      "email": "jjrdn@styosis.com"
    }
  ],
  "directories": {},
  "_shasum": "64322b28e9b383fe8c4f8dec172ae9c3aefe73a1",
  "_from": "retry-on-error@",
  "_resolved": "https://registry.npmjs.org/retry-on-error/-/retry-on-error-0.0.2.tgz"
}
